apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-init
  namespace: nginx-test
spec:
  selector:
    matchLabels:
      app: nginx-init
  replicas: 1
  template:
    metadata:
      labels:
        app: nginx-init
    spec:
      containers:
      - name: nginx
        image: nginx:latest
        ports:
        - containerPort: 80
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        volumeMounts:
        - name: nginx
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        - name: index
          mountPath: /usr/share/nginx/html
      initContainers:
      - name: install
        image: busybox
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        command: ["/bin/sh", "-c", "cat /apps/index.html > /mnt/index.html && echo $POD_NAME >> /mnt/index.html"]
        volumeMounts:
        - name: task-pv-storage
          mountPath: /apps
        - name: index
          mountPath: "/mnt"
      dnsPolicy: Default
      volumes:
      - name: index
        emptyDir: {}
      - name: nginx
        configMap:
          name: nginx-config
      - name: task-pv-storage
        persistentVolumeClaim:
          claimName: task-pv-claim
---
apiVersion: v1
kind: Service
metadata: 
    name: nginx-init
    namespace: nginx-test
    labels:
        app: nginx-init
spec:
    type: NodePort
    selector:
        app: nginx-init
    ports:
    - port: 8888
      nodePort: 31034